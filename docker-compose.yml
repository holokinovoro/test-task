version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      CONNECTION_STRING: Host=postgres;Port=5432;Database=appdb;Username=app;Password=app
      ASPNETCORE_URLS: http://+:8080
    expose:
      - "8080"

  web:
    build: ./front/user-phone-management
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: /api
      NODE_ENV: production
    expose:
      - "3000"

  nginx:
    image: nginx:alpine
    depends_on:
      - api
      - web
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  pg_data: {}
